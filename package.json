{
  "name": "prd-assistant",
  "displayName": "PRD Assistant",
  "description": "Transform your Product Requirements Documents into interactive, trackable project dashboards.",
  "version": "1.1.4",
  "publisher": "fusepilot",
  "author": "Michael Delaney",
  "icon": "images/icon.png",
  "license": "MIT",
  "homepage": "https://github.com/fusepilot/prd-assistant-vscode#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/fusepilot/prd-assistant-vscode"
  },
  "bugs": {
    "url": "https://github.com/fusepilot/prd-assistant-vscode/issues"
  },
  "keywords": [
    "prd",
    "product-requirements",
    "task-management",
    "markdown",
    "project-management",
    "ai-integration",
    "documentation",
    "tracking",
    "codelens",
    "tree-view"
  ],
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other",
    "Linters",
    "Formatters"
  ],
  "activationEvents": [
    "onLanguage:markdown",
    "workspaceContains:**/PRD.md",
    "workspaceContains:**/prd.md",
    "workspaceContains:**/*PRD*.md",
    "workspaceContains:**/*prd*.md"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "prd-assistant.addTask",
        "title": "PRD: Add New Task"
      },
      {
        "command": "prd-assistant.generateReport",
        "title": "PRD: Generate Progress Report",
        "icon": "$(file-text)"
      },
      {
        "command": "prd-assistant.exportReportCsv",
        "title": "PRD: Export Progress Report (CSV)",
        "icon": "$(export)"
      },
      {
        "command": "prd-assistant.exportReportJson",
        "title": "PRD: Export Progress Report (JSON)",
        "icon": "$(export)"
      },
      {
        "command": "prd-assistant.copyTaskList",
        "title": "PRD: Copy Task List"
      },
      {
        "command": "prd-assistant.openPrdFile",
        "title": "PRD: Open PRD File",
        "icon": "$(file)"
      },
      {
        "command": "prd-assistant.createPrdFile",
        "title": "PRD: Create Empty PRD File",
        "icon": "$(new-file)"
      },
      {
        "command": "prd-assistant.copyHeaderTasks",
        "title": "PRD: Copy All Task IDs"
      },
      {
        "command": "prd-assistant.copyHeaderTasksContext",
        "title": "Copy All Task IDs"
      },
      {
        "command": "prd-assistant.fixDuplicates",
        "title": "PRD: Fix Duplicate Task IDs"
      },
      {
        "command": "prd-assistant.normalizeCheckboxes",
        "title": "PRD: Normalize Checkbox Formatting"
      },
      {
        "command": "prd-assistant.toggleCodeLens",
        "title": "Toggle PRD CodeLens",
        "icon": "$(eye)"
      },
      {
        "command": "prd-assistant.toggleCodeLensOff",
        "title": "Toggle PRD CodeLens",
        "icon": "$(eye-closed)"
      },
      {
        "command": "prd-assistant.toggleTask",
        "title": "Toggle Task"
      },
      {
        "command": "prd-assistant.addTaskAtCursor",
        "title": "Add Task Here"
      },
      {
        "command": "prd-assistant.addTaskToHeader",
        "title": "Add Task"
      },
      {
        "command": "prd-assistant.addTaskToTask",
        "title": "Add Subtask"
      },
      {
        "command": "prd-assistant.toggleCollapseExpand",
        "title": "Toggle Collapse/Expand",
        "icon": "$(collapse-all)"
      },
      {
        "command": "prd-assistant.assignTask",
        "title": "Assign Task"
      },
      {
        "command": "prd-assistant.copyDeepLink",
        "title": "Copy Deep Link"
      },
      {
        "command": "prd-assistant.refreshTasks",
        "title": "Refresh Tasks",
        "icon": "$(refresh)"
      },
      {
        "command": "prd-assistant.goToTask",
        "title": "Go to Task",
        "icon": "$(go-to-file)"
      },
      {
        "command": "prd-assistant.copyTaskId",
        "title": "Copy Task ID"
      },
      {
        "command": "prd-assistant.copyTaskText",
        "title": "Copy Task Text"
      },
      {
        "command": "prd-assistant.filterAllTasks",
        "title": "Show All Tasks",
        "icon": "$(list-flat)"
      },
      {
        "command": "prd-assistant.filterCompletedTasks",
        "title": "Show Completed Tasks",
        "icon": "$(pass)"
      },
      {
        "command": "prd-assistant.filterUncompletedTasks",
        "title": "Show Uncompleted Tasks",
        "icon": "$(circle-large-outline)"
      },
      {
        "command": "prd-assistant.goToHeader",
        "title": "Go to Header"
      },
      {
        "command": "prd-assistant.openDocument",
        "title": "Open Document",
        "icon": "$(go-to-file)"
      },
      {
        "command": "prd-assistant.debugScan",
        "title": "PRD: Debug Scan Workspace"
      },
      {
        "command": "prd-assistant.convertListItem",
        "title": "Convert to Task"
      },
      {
        "command": "prd-assistant.convertSectionListItems",
        "title": "Convert Section List Items to Tasks"
      },
      {
        "command": "prd-assistant.convertAllListItems",
        "title": "Convert All List Items to Tasks"
      },
      {
        "command": "prd-assistant.deconvertTask",
        "title": "Deconvert"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "prdExplorer",
          "name": "PRD Tasks",
          "icon": "$(checklist)",
          "contextualTitle": "PRD Assistant"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "prdExplorer",
        "contents": "Scanning workspace for PRD files...\n\nIf no files are found after scanning:\n[Create Empty PRD File](command:prd-assistant.createPrdFile)\n[Open Existing PRD File](command:prd-assistant.openPrdFile)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "prd-assistant.toggleTask",
          "when": "false"
        },
        {
          "command": "prd-assistant.addTaskAtCursor",
          "when": "false"
        },
        {
          "command": "prd-assistant.addTaskToHeader",
          "when": "false"
        },
        {
          "command": "prd-assistant.assignTask",
          "when": "false"
        },
        {
          "command": "prd-assistant.copyDeepLink",
          "when": "false"
        },
        {
          "command": "prd-assistant.refreshTasks",
          "when": "false"
        },
        {
          "command": "prd-assistant.goToTask",
          "when": "false"
        },
        {
          "command": "prd-assistant.copyTaskId",
          "when": "false"
        },
        {
          "command": "prd-assistant.copyTaskText",
          "when": "false"
        },
        {
          "command": "prd-assistant.filterAllTasks",
          "when": "false"
        },
        {
          "command": "prd-assistant.filterCompletedTasks",
          "when": "false"
        },
        {
          "command": "prd-assistant.filterUncompletedTasks",
          "when": "false"
        },
        {
          "command": "prd-assistant.goToHeader",
          "when": "false"
        },
        {
          "command": "prd-assistant.copyHeaderTasksContext",
          "when": "false"
        },
        {
          "command": "prd-assistant.addTaskToTask",
          "when": "false"
        },
        {
          "command": "prd-assistant.toggleCollapseExpand",
          "when": "false"
        },
        {
          "command": "prd-assistant.toggleCodeLens",
          "when": "false"
        },
        {
          "command": "prd-assistant.toggleCodeLensOff",
          "when": "false"
        },
        {
          "command": "prd-assistant.convertListItem",
          "when": "false"
        },
        {
          "command": "prd-assistant.convertSectionListItems",
          "when": "false"
        },
        {
          "command": "prd-assistant.convertAllListItems",
          "when": "false"
        },
        {
          "command": "prd-assistant.deconvertTask",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "prd-assistant.createPrdFile",
          "when": "view == prdExplorer",
          "group": "navigation@1"
        },
        {
          "command": "prd-assistant.openPrdFile",
          "when": "view == prdExplorer",
          "group": "navigation@2"
        },
        {
          "command": "prd-assistant.refreshTasks",
          "when": "view == prdExplorer",
          "group": "navigation@3"
        },
        {
          "command": "prd-assistant.generateReport",
          "when": "view == prdExplorer",
          "group": "export@1"
        },
        {
          "command": "prd-assistant.exportReportCsv",
          "when": "view == prdExplorer",
          "group": "export@2"
        },
        {
          "command": "prd-assistant.exportReportJson",
          "when": "view == prdExplorer",
          "group": "export@3"
        },
        {
          "command": "prd-assistant.filterAllTasks",
          "when": "view == prdExplorer",
          "group": "1_filter@1"
        },
        {
          "command": "prd-assistant.filterCompletedTasks",
          "when": "view == prdExplorer",
          "group": "1_filter@2"
        },
        {
          "command": "prd-assistant.filterUncompletedTasks",
          "when": "view == prdExplorer",
          "group": "1_filter@3"
        },
        {
          "command": "prd-assistant.toggleCollapseExpand",
          "when": "view == prdExplorer",
          "group": "navigation@4"
        }
      ],
      "view/item/context": [
        {
          "command": "prd-assistant.goToTask",
          "when": "view == prdExplorer && viewItem == prdTask",
          "group": "navigation@1"
        },
        {
          "command": "prd-assistant.toggleTask",
          "when": "view == prdExplorer && viewItem == prdTask",
          "group": "1_modification@1"
        },
        {
          "command": "prd-assistant.assignTask",
          "when": "view == prdExplorer && viewItem == prdTask",
          "group": "1_modification@2"
        },
        {
          "command": "prd-assistant.copyTaskId",
          "when": "view == prdExplorer && viewItem == prdTask",
          "group": "2_copy@1"
        },
        {
          "command": "prd-assistant.copyTaskText",
          "when": "view == prdExplorer && viewItem == prdTask",
          "group": "2_copy@2"
        },
        {
          "command": "prd-assistant.copyDeepLink",
          "when": "view == prdExplorer && viewItem == prdTask",
          "group": "2_copy@3"
        },
        {
          "command": "prd-assistant.addTaskToTask",
          "when": "view == prdExplorer && viewItem == prdTaskWithChildren",
          "group": "1_modification@3"
        },
        {
          "command": "prd-assistant.addTaskToHeader",
          "when": "view == prdExplorer && viewItem == prdHeader",
          "group": "1_modification@1"
        },
        {
          "command": "prd-assistant.copyHeaderTasksContext",
          "when": "view == prdExplorer && viewItem == prdHeader",
          "group": "2_copy@1"
        },
        {
          "command": "prd-assistant.goToHeader",
          "when": "view == prdExplorer && viewItem == prdHeader",
          "group": "navigation@1"
        },
        {
          "command": "prd-assistant.openDocument",
          "when": "view == prdExplorer && viewItem == prdDocument",
          "group": "navigation@1"
        }
      ],
      "editor/context": [
        {
          "command": "prd-assistant.toggleTask",
          "when": "resourceExtname == .md",
          "group": "prd"
        },
        {
          "command": "prd-assistant.assignTask",
          "when": "resourceExtname == .md",
          "group": "prd"
        },
        {
          "command": "prd-assistant.copyDeepLink",
          "when": "resourceExtname == .md",
          "group": "prd"
        },
        {
          "command": "prd-assistant.addTaskAtCursor",
          "when": "resourceExtname == .md",
          "group": "prd"
        }
      ],
      "editor/title": [
        {
          "command": "prd-assistant.toggleCodeLens",
          "when": "resourceExtname == .md && prdAssistant.codeLensEnabled && prdAssistant.isPrdFile",
          "group": "navigation"
        },
        {
          "command": "prd-assistant.toggleCodeLensOff",
          "when": "resourceExtname == .md && !prdAssistant.codeLensEnabled && prdAssistant.isPrdFile",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "title": "PRD Assistant",
      "properties": {
        "prdAssistant.autoGenerateIds": {
          "type": "boolean",
          "default": true,
          "description": "Automatically generate task IDs"
        },
        "prdAssistant.idFormat": {
          "type": "string",
          "default": "sequential",
          "enum": [
            "sequential",
            "timestamp"
          ],
          "enumDescriptions": [
            "Sequential IDs: PREFIX-100001, PREFIX-100002, etc. (recommended)",
            "Timestamp-based IDs: PREFIX-XXXYYY where XXX is last 3 digits of timestamp and YYY is a counter"
          ],
          "description": "ID generation strategy for new tasks",
          "markdownDescription": "Choose how task IDs are generated:\n- **Sequential**: Creates IDs like `PRD-100001`, `PRD-100002`, etc. Automatically increments from the highest existing ID.\n- **Timestamp**: Creates IDs based on current timestamp for guaranteed uniqueness.\n\nThe prefix can be customized using the `taskIdPrefix` setting."
        },
        "prdAssistant.showCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Show inline task actions"
        },
        "prdAssistant.decorateAssignees": {
          "type": "boolean",
          "default": true,
          "description": "Highlight @-mentions"
        },
        "prdAssistant.decorateDeepLinks": {
          "type": "boolean",
          "default": true,
          "description": "Make task IDs clickable"
        },
        "prdAssistant.taskFilter": {
          "type": "string",
          "enum": [
            "all",
            "completed",
            "uncompleted"
          ],
          "default": "all",
          "description": "Filter tasks in the explorer"
        },
        "prdAssistant.normalizeCheckboxes": {
          "type": "boolean",
          "default": true,
          "description": "Normalize checkbox formatting ([] -> [ ], [x ] -> [x]) when formatting"
        },
        "prdAssistant.filePatterns": {
          "type": "array",
          "default": [
            "*prd*.md",
            "PRD*.md",
            "*PRD*.md"
          ],
          "description": "File name patterns to identify PRD files (case-insensitive)",
          "markdownDescription": "Glob patterns to identify PRD files. Default patterns match files containing 'PRD' or 'prd' in the filename."
        },
        "prdAssistant.additionalFiles": {
          "type": "array",
          "default": [],
          "description": "Additional specific files to enhance with PRD Assistant features",
          "markdownDescription": "List of specific file paths to enhance with PRD Assistant features. For example: `[\"CLAUDE.md\", \"TODO.md\", \"TASKS.md\"]`. These files will have all PRD Assistant features enabled regardless of their naming pattern.",
          "items": {
            "type": "string"
          }
        },
        "prdAssistant.enableCodeLensForHeaders": {
          "type": "boolean",
          "default": true,
          "description": "Show completion stats and 'Add Task' buttons on headers"
        },
        "prdAssistant.enableCodeLensForTasks": {
          "type": "boolean",
          "default": true,
          "description": "Show action buttons (Toggle, Assign, Copy) on tasks"
        },
        "prdAssistant.enableConversionCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Show 'Convert to Task' buttons on list items"
        },
        "prdAssistant.showProgressInTreeView": {
          "type": "boolean",
          "default": true,
          "description": "Display completion percentage in the PRD Tasks explorer"
        },
        "prdAssistant.autoProcessDocuments": {
          "type": "boolean",
          "default": true,
          "description": "Automatically process PRD documents when opened or changed"
        },
        "prdAssistant.showDuplicateWarnings": {
          "type": "boolean",
          "default": true,
          "description": "Show warnings for duplicate task IDs"
        },
        "prdAssistant.enableQuickFixes": {
          "type": "boolean",
          "default": true,
          "description": "Enable quick fixes for duplicate task IDs"
        },
        "prdAssistant.defaultAssignee": {
          "type": "string",
          "default": "",
          "description": "Default assignee for new tasks (e.g., @username)"
        },
        "prdAssistant.taskIdPrefix": {
          "type": "string",
          "default": "PRD",
          "description": "Prefix for generated task IDs",
          "markdownDescription": "The prefix to use for all generated task IDs. For example:\n- `PRD` → PRD-100001\n- `TASK` → TASK-100001\n- `PROJ` → PROJ-100001"
        },
        "prdAssistant.enableDecorations": {
          "type": "boolean",
          "default": true,
          "description": "Enable visual decorations for tasks and assignees"
        }
      }
    },
    "languages": [
      {
        "id": "prd-markdown",
        "aliases": [
          "PRD Markdown",
          "prd"
        ],
        "extensions": [
          ".prd.md"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "prd-markdown",
        "scopeName": "text.prd.markdown",
        "path": "./syntaxes/prd.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.markdown": "markdown"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "package": "vsce package",
    "package:pre": "vsce package --pre-release",
    "publish": "vsce publish",
    "publish:pre": "vsce publish --pre-release",
    "publish:patch": "vsce publish patch",
    "publish:minor": "vsce publish minor",
    "publish:major": "vsce publish major",
    "clean": "rm -rf out dist *.vsix",
    "build:prod": "npm run clean && npm run compile && npm run package"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.100.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@types/minimatch": "^5.1.2",
    "minimatch": "^9.0.5"
  }
}
